{
  "containers": {
    "bash": {
      "image": "ghcr.io/dojocodes/sandbox-worker-bash:1.2.0",
      "name": "Bash",
      "command": "bash code.sh",
      "description": "Bash (acronym for Bourne-Again shell) is a command line interpreter. It is the Unix shell of the GNU project.",
      "files": {
        "code.sh": {
          "editable": true
        }
      }
    },
    "c": {
      "image": "ghcr.io/dojocodes/sandbox-worker-c:1.2.0",
      "name": "C",
      "before_command": "gcc -std=c17 code.c -o executable",
      "command": "./executable",
      "description": "C is a general-purpose, procedural computer programming language supporting structured programming, lexical variable scope, and recursion, with a static type system.",
      "files": {
        "code.c": {
          "editable": true
        }
      }
    },
    "cpp": {
      "image": "ghcr.io/dojocodes/sandbox-worker-cpp:1.2.0",
      "name": "C++",
      "before_command": "g++ -std=c++20 code.cpp -o executable",
      "command": "./executable",
      "description": "C++ is a general-purpose programming language created as an extension of the C programming language, or 'C with Classes'.",
      "files": {
        "code.cpp": {
          "editable": true
        }
      }
    },
    "csharp": {
      "image": "ghcr.io/dojocodes/sandbox-worker-csharp:1.2.0",
      "name": "C#",
      "before_command": "csc code.cs",
      "command": "mono code.exe",
      "description": "C# is a general-purpose, multi-paradigm programming language, which encompasses static typing, strong typing, lexically scoped, imperative, declarative, functional, generic, object-oriented and component-oriented programming disciplines.",
      "files": {
        "code.cs": {
          "editable": true
        }
      }
    },
    "go": {
      "image": "ghcr.io/dojocodes/sandbox-worker-go:1.2.0",
      "name": "Go",
      "command": "go run code.go",
      "description": "Go is a statically typed, compiled programming language, which is syntactically similar to C, but with memory safety, garbage collection, structural typing and CSP-style concurrency.",
      "files": {
        "code.go": {
          "editable": true
        }
      }
    },
    "java": {
      "image": "ghcr.io/dojocodes/sandbox-worker-java:1.2.0",
      "name": "Java 11",
      "command": "java code.java",
      "description": "Java is a high-level, class-based, object-oriented programming language that is designed to have as few implementation dependencies as possible.",
      "files": {
        "code.java": {
          "editable": true
        }
      }
    },
    "lua": {
      "image": "ghcr.io/dojocodes/sandbox-worker-lua:1.2.0",
      "name": "Lua 5.4",
      "command": "lua5.4 code.lua",
      "description": "Lua is a lightweight, high-level, multi-paradigm programming language designed primarily for embedded use in applications.",
      "files": {
        "code.lua": {
          "editable": true
        }
      }
    },
    "nodejs": {
      "image": "ghcr.io/dojocodes/sandbox-worker-nodejs:1.2.0",
      "name": "NodeJS",
      "command": "node code.js",
      "description": "Node.js is a back-end JavaScript runtime environment, runs on the V8 JavaScript engine, and executes JavaScript code outside a web browser.",
      "files": {
        "code.js": {
          "editable": true
        }
      }
    },
    "nushell": {
      "image": "ghcr.io/dojocodes/sandbox-worker-nushell:1.2.0",
      "name": "Nushell",
      "command": "nu code.nu",
      "description": "nushell is a new type of shell. It has native support for structured and typed data.",
      "files": {
        "code.nu": {
          "editable": true
        }
      }
    },
    "python": {
      "image": "ghcr.io/dojocodes/sandbox-worker-python:1.2.0",
      "name": "Python",
      "command": "python3 code.py",
      "description": "Python is a programming language that lets you work quickly and integrate systems more effectively.",
      "files": {
        "code.py": {
          "editable": true
        }
      }
    },
    "racket": {
      "image": "ghcr.io/dojocodes/sandbox-worker-racket:1.2.0",
      "name": "Racket",
      "command": "racket code.rkt",
      "description": "Racket is a general-purpose, multi-paradigm programming language and a multi-platform distribution that includes the Racket language, compiler, large standard library, IDE, development tools, and a set of additional languages.",
      "files": {
        "code.rkt": {
          "editable": true
        }
      }
    },
    "rust": {
      "image": "ghcr.io/dojocodes/sandbox-worker-rust:1.2.0",
      "name": "Rust",
      "before_command": "rustc code.rs -o executable",
      "command": "./executable",
      "description": "Rust is a multi-paradigm, general-purpose programming language designed for performance and safety, especially safe concurrency",
      "files": {
        "code.rs": {
          "editable": true
        }
      }
    },
    "perl": {
      "image": "ghcr.io/dojocodes/sandbox-worker-perl:1.2.0",
      "name": "Perl",
      "command": "perl code.pl",
      "description": "Perl is a highly capable, feature-rich programming language with over 30 years of development.",
      "files": {
        "code.pl": {
          "editable": true
        }
      }
    }
  }
}
